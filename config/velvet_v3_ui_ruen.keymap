#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        mouse_layer: mouse_layer {
            compatible = "zmk,behavior-sticky-key";
            label = "MOUSE_LAYER";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <200>;
        };

        zip_auto_mouse: zip_auto_mouse {
            compatible = "zmk,input-processor-temp-layer";
            #input-processor-cells = <2>;
            require-prior-idle-ms = <800>;
            excluded-positions = <>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q  &kp W       &kp E         &kp R            &kp T                                 &kp Y        &kp U  &kp I      &kp O    &kp P         &trans
&kp TAB    &kp A  &kp S       &kp D         &kp F            &kp G                                 &kp H        &kp J  &kp K      &kp L    &kp SEMI      &trans
&kp LSHFT  &kp Z  &kp X       &kp C         &kp V            &kp B                                 &kp N        &kp M  &kp COMMA  &kp DOT  &kp LEFT_ALT  &trans
                  &kp KP_DOT  &kp KP_COMMA  &mt LCTRL SPACE  &mo 3  &kp LEFT_WIN    &kp BACKSPACE  &lt 2 ENTER  &none  &trans     &trans
            >;

            display-name = "Base";
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                                 &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp TAB    &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                 &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                                  &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp LEFT_ALT         &trans
                                    &kp RU_DOT            &kp RU_COMMA        &mt LCTRL SPACE     &mo 4               &kp LEFT_WIN    &kp BACKSPACE  &mo 2               &none                      &trans               &trans
            >;
        };

        nav {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5           &kp F6                                       &kp F7           &kp F8             &kp F9        &kp F10          &kp F11        &kp F12
&kp LEFT_ALT    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5                                 &kp LEFT_ARROW   &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP    &kp HOME
&kp LEFT_SHIFT  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0                                 &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp K_MUTE    &kp PRINTSCREEN  &kp PAGE_DOWN  &kp END
                              &trans        &trans        &mt LCTRL SPACE  &mo 5         &kp LEFT_WIN    &kp BACKSPACE  &trans           &trans             &trans        &trans
            >;

            display-name = "Navigation";
        };

        sym_en {
            bindings = <
&trans         &kp DLLR          &kp LEFT_BRACE        &kp HASH      &kp RIGHT_BRACE        &kp EXCL                    &kp CARET  &kp DQT    &kp SQT    &kp GRAVE  &kp PRCNT  &trans
&trans         &kp TILDE         &kp LEFT_BRACKET      &kp STAR      &kp RIGHT_BRACKET      &kp PLUS                    &kp AT     &kp MINUS  &kp UNDER  &kp EQUAL  &kp COLON  &trans
&kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp QUESTION  &kp RIGHT_PARENTHESIS  &trans                      &kp AMPS   &kp FSLH   &kp PIPE   &kp BSLH   &kp SEMI   &trans
                                 &trans                &trans        &trans                 &mo 5     &trans    &trans  &trans     &trans     &trans     &trans
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans         &en DLLR          &en LEFT_BRACE  &en HASH      &en RIGHT_BRACE  &kp EXCL                    &en CARET      &kp RU_DQT  &en SQT         &en GRAVE      &en PRCNT  &trans
&kp RU_NUMERO  &en TILDE         &en LBKT        &kp STAR      &en RBKT         &kp PLUS                    &en AT         &en MINUS   &kp UNDERSCORE  &kp EQUAL      &kp COLON  &trans
&en LESS_THAN  &en GREATER_THAN  &kp LPAR        &kp QUESTION  &kp RPAR         &trans                      &en AMPERSAND  &en SLASH   &en PIPE        &en BACKSLASH  &en SEMI   &trans
                                 &trans          &trans        &trans           &mo 5     &trans    &trans  &trans         &trans      &trans          &trans
            >;
        };

        adj {
            bindings = <
&trans  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none   &none  &kp F5  &kp F6   &kp F7   &kp F8                   &trans        &kp C_VOL_DN  &kp K_MUTE    &kp C_VOL_UP  &trans        &trans
&none   &none  &kp F9  &kp F10  &kp F11  &kp F12                  &trans        &trans        &trans        &trans        &trans        &trans
               &trans  &trans   &none    &none    &none    &none  &none         &none         &trans        &trans
            >;

            display-name = "Adjust";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 7   &mkp MB3  &mkp MB2  &mkp MB1  &mo 8                     &mo 8   &mkp MB1  &mkp MB2  &mkp MB3  &mo 7   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Mouse";
        };

        scroll {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Scroll";
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Sniper";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_auto_mouse 6 500>, <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
